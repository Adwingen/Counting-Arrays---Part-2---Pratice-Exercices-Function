/*
*
* Advanced C Programming Masterclass: Pointers & Memory in C
*
* @theme Counting Arrays - Part#2 - Pratice Exercices Function
* @brief Function - FreqAsValue
* @author Vlad Budnitski
* @date 22/03/2023
*
*/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define SIZE 6


int FreqAsValue(int *array, int sizeArray, int k)
{
    int* countArray;
    int i;

    countArray = (int*)calloc((k + 1), sizeof(int));
   

    // bulding the counting array
    for (i = 0; i < sizeArray; i++)
        countArray[array[i]]++;

    // look for "index" != countArray[index]
    for (i = 0; i <= k; i++)
        if (i != countArray[i])
        {
            free(countArray);
            return 0;
        }
        
    // All elements satisfy the "freq as valid condition"
    free(countArray);
    return 1;
}

int main()
{
    int array1[SIZE] = { 1,2,2,1,4,3 };
    int array2[SIZE] = { 3,2,2,1,3,3 };
    int k1, k2;
    int result1, result2;

    printf("Enter the value k1: "); 
    scanf("%d", &k1);
    result1 = FreqAsValue(array1, SIZE, k1);
    printf("\nOutput of the Array 1 --> %s!\n", result1 == 1 ? "Valid" : "Invalid");

    printf("Enter the value k2: ");
    scanf("%d", &k2);
    result2 = FreqAsValue(array2, SIZE, k2);
    printf("\nOutput of the Array 2 --> %s!\n", result2 == 1 ? "Valid" : "Invalid");

    return 0;
}
